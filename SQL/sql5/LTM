```mysql
JOIN, 오랜 기간 보호한 동물(1)
: https://school.programmers.co.kr/learn/courses/30/lessons/59044

select a.name, a.datetime from animal_ins as a
left join animal_outs as b
on a.animal_id = b.animal_id
where b.animal_id is null
order by a.datetime
limit 3
```

```mysql
SELECT, 강원도에 위치한 생산공장 목록 출력하기
:https://school.programmers.co.kr/learn/courses/30/lessons/131112

select factory_id, factory_name, address from food_factory where address like '강원도%'
```

```mysql
SELECT, 상위 n개 레코드
: https://school.programmers.co.kr/learn/courses/30/lessons/59405

select name from animal_ins order by datetime limit 1
```

```mysql
SELECT, 여러 기준으로 정렬하기
: https://school.programmers.co.kr/learn/courses/30/lessons/59404

select animal_id, name, datetime from animal_ins order by name, datetime desc
```

```mysql
SELECT, 동물의 아이디와 이름
:https://school.programmers.co.kr/learn/courses/30/lessons/59403

select animal_id, name from animal_ins order by animal_id
```

```mysql
SELECT, 어린 동물 찾기
:https://school.programmers.co.kr/learn/courses/30/lessons/59037#fn1

select animal_id, name from animal_ins where intake_condition != 'aged' order by animal_id
```

```mysql
SELECT, 아픈 동물 찾기
:https://school.programmers.co.kr/learn/courses/30/lessons/59036

select animal_id, name from animal_ins where intake_condition = 'sick' order by animal_id
```

```mysql
SELECT, 역순 정렬하기
: https://school.programmers.co.kr/learn/courses/30/lessons/59035

select name, datetime from animal_ins order by animal_id desc
```

```mysql
SELECT, 재구매가 일어난 상품과 회원 리스트 구하기
: https://school.programmers.co.kr/learn/courses/30/lessons/131536

select user_id, product_id
from online_sale
group by user_id, product_id
having count(*) > 1
order by user_id, product_id desc
```

```mysql
SELECT, 오프라인/온라인 판매 데이터 통합하기
: https://school.programmers.co.kr/learn/courses/30/lessons/131537

select date_format(sales_date,'%Y-%m-%d') as sales_date, product_id, user_id, sales_amount from online_sale
where sales_date >= '2022-03-01' and sales_date <= '2022-03-31'

union all

select date_format(sales_date,'%Y-%m-%d') as sales_date, product_id, NULL as user_id, sales_amount from offline_sale
where sales_date >= '2022-03-01' and sales_date <= '2022-03-31'

order by sales_date, product_id, user_id

```

```mysql
SELECT, 서울에 위치한 식당 목록 출력하기
: https://school.programmers.co.kr/learn/courses/30/lessons/131118


select a.rest_id, b.rest_name, b.food_type, b.favorites, b.address, round(avg(a.review_score), 2) as score
from rest_review as a
inner join rest_info as b on a.rest_id = b.rest_id
group by a.rest_id
having b.address like '서울%'
order by score desc, b.favorites desc
```

```mysql
SELECT, 조건에 맞는 도서 리스트 출력하기
: https://school.programmers.co.kr/learn/courses/30/lessons/144853

SELECT BOOK_ID, DATE_FORMAT(PUBLISHED_DATE,'%Y-%m-%d') AS PUBLISHED_DATE FROM BOOK WHERE CATEGORY = '인문' AND YEAR(PUBLISHED_DATE) = '2021' ORDER BY PUBLISHED_DATE
```
